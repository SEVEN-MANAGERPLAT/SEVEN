<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace=".dao.AccountDao">

    <resultMap type=".entity.Account" id="AccountMap">
        <result property="accountId" column="ACCOUNT_ID" jdbcType="INTEGER"/>
        <result property="accountNum" column="ACCOUNT_NUM" jdbcType="VARCHAR"/>
        <result property="accountPwd" column="ACCOUNT_PWD" jdbcType="VARCHAR"/>
        <result property="accountName" column="ACCOUNT_NAME" jdbcType="VARCHAR"/>
        <result property="accountState" column="ACCOUNT_STATE" jdbcType="OTHER"/>
        <result property="accountType" column="ACCOUNT_TYPE" jdbcType="INTEGER"/>
        <result property="roleid" column="ROLEID" jdbcType="INTEGER"/>
        <result property="empId" column="EMP_ID" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="AccountMap">
        select
          ACCOUNT_ID, ACCOUNT_NUM, ACCOUNT_PWD, ACCOUNT_NAME, ACCOUNT_STATE, ACCOUNT_TYPE, ROLEID, EMP_ID
        from samy.account
        where ACCOUNT_ID = #{accountId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="AccountMap">
        select
          ACCOUNT_ID, ACCOUNT_NUM, ACCOUNT_PWD, ACCOUNT_NAME, ACCOUNT_STATE, ACCOUNT_TYPE, ROLEID, EMP_ID
        from samy.account
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="AccountMap">
        select
          ACCOUNT_ID, ACCOUNT_NUM, ACCOUNT_PWD, ACCOUNT_NAME, ACCOUNT_STATE, ACCOUNT_TYPE, ROLEID, EMP_ID
        from samy.account
        <where>
            <if test="accountId != null">
                and ACCOUNT_ID = #{accountId}
            </if>
            <if test="accountNum != null and accountNum != ''">
                and ACCOUNT_NUM = #{accountNum}
            </if>
            <if test="accountPwd != null and accountPwd != ''">
                and ACCOUNT_PWD = #{accountPwd}
            </if>
            <if test="accountName != null and accountName != ''">
                and ACCOUNT_NAME = #{accountName}
            </if>
            <if test="accountState != null">
                and ACCOUNT_STATE = #{accountState}
            </if>
            <if test="accountType != null">
                and ACCOUNT_TYPE = #{accountType}
            </if>
            <if test="roleid != null">
                and ROLEID = #{roleid}
            </if>
            <if test="empId != null">
                and EMP_ID = #{empId}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="accountId" useGeneratedKeys="true">
        insert into samy.account(ACCOUNT_NUM, ACCOUNT_PWD, ACCOUNT_NAME, ACCOUNT_STATE, ACCOUNT_TYPE, ROLEID, EMP_ID)
        values (#{accountNum}, #{accountPwd}, #{accountName}, #{accountState}, #{accountType}, #{roleid}, #{empId})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update samy.account
        <set>
            <if test="accountNum != null and accountNum != ''">
                ACCOUNT_NUM = #{accountNum},
            </if>
            <if test="accountPwd != null and accountPwd != ''">
                ACCOUNT_PWD = #{accountPwd},
            </if>
            <if test="accountName != null and accountName != ''">
                ACCOUNT_NAME = #{accountName},
            </if>
            <if test="accountState != null">
                ACCOUNT_STATE = #{accountState},
            </if>
            <if test="accountType != null">
                ACCOUNT_TYPE = #{accountType},
            </if>
            <if test="roleid != null">
                ROLEID = #{roleid},
            </if>
            <if test="empId != null">
                EMP_ID = #{empId},
            </if>
        </set>
        where ACCOUNT_ID = #{accountId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from samy.account where ACCOUNT_ID = #{accountId}
    </delete>

</mapper>